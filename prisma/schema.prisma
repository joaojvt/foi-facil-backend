generator Cliente {
  provider = "prisma-Cliente-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  nome       String      @db.VarChar(255)
  email      String      @unique @db.VarChar(50)
  cep        String      @db.VarChar(8)
  endereco   String
  cidadee    String      @db.VarChar(255)
  estado     String      @db.VarChar(2)
  cpf        String      @db.VarChar(11)
  cargo      String      @db.VarChar(50)
  apelido    String?     @db.VarChar(50)
  senha      String
  userRoleId Int
  status     String      @db.VarChar(10)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  userRole   UserRole    @relation(fields: [userRoleId], references: [id])
  Cliente    Cliente[]
  Parceiros  Parceiros[]
  telefone   Telefone[]
}

model Telefone {
  id        Int      @id @default(autoincrement())
  telefone  String
  userId    Int?
  status    String   @db.VarChar(10)
  createdAt DateTime @default(now())
  clienteId Int?
  Cliente   Cliente? @relation(fields: [clienteId], references: [id])
  User      User?    @relation(fields: [userId], references: [id])
}

model Contato {
  id          Int        @id @default(autoincrement())
  telefone    String
  nome        String
  email       String
  cargo       String
  status      String     @db.VarChar(10)
  createdAt   DateTime   @default(now())
  parceirosId Int?
  Parceiros   Parceiros? @relation(fields: [parceirosId], references: [id])
}

model UserRole {
  id        Int      @id @default(autoincrement())
  nome      String   @db.VarChar(255)
  rotine    String   @db.VarChar(10)
  status    String   @db.VarChar(10)
  createdAt DateTime @default(now())
  User      User[]
}

model Parceiros {
  id                    Int                     @id @default(autoincrement())
  userId                Int
  parceritoTipo         String
  razaoSocial           String
  nomeFantasia          String
  cnpj                  String                  @db.VarChar(14)
  inscrisaoEstadual     String                  @db.VarChar(20)
  incricaoMunicial      String                  @db.VarChar(20)
  cep                   String                  @db.VarChar(8)
  endereco              String
  cidadee               String                  @db.VarChar(100)
  estado                String                  @db.VarChar(2)
  status                String                  @db.VarChar(10)
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  user                  User                    @relation(fields: [userId], references: [id])
  contatos              Contato[]
  FacilitadorPagamenteo FacilitadorPagamenteo[]
}

model Financeiro {
  id                 Int      @id @default(autoincrement())
  cashier            String   @db.VarChar(255)
  tipoReceitaDespesa String   @db.VarChar(5)
  nome               String
  tipoBaixa          String   @db.VarChar(20)
  Reversal           String   @db.VarChar(20)
  createdAt          DateTime @default(now())
}

model FacilitadorPagamenteo {
  id          Int       @id @default(autoincrement())
  ParceirosId Int
  type        String    @db.VarChar(10)
  clienteId   Int?
  status      String    @db.VarChar(10)
  createdAt   DateTime  @default(now())
  partner     Parceiros @relation(fields: [ParceirosId], references: [id])
}

model Categorias {
  id            Int             @id @default(autoincrement())
  nome          String          @db.VarChar(255)
  tipoCategoria String          @db.VarChar(25)
  caminhoIcone  String          @db.VarChar(255)
  status        String          @db.VarChar(10)
  createdAt     DateTime        @default(now())
  AnunciosBotao AnunciosBotao[]
  Destaques     Destaques[]
  Planos        Planos[]
  SubCategorias SubCategorias[]
}

model SubCategorias {
  id            Int             @id @default(autoincrement())
  nome          String          @db.VarChar(255)
  type          String          @db.VarChar(10)
  caminhoIcone  String          @db.VarChar(255)
  categoriaId   Int
  status        String          @db.VarChar(10)
  createdAt     DateTime        @default(now())
  Categoria     Categorias      @relation(fields: [categoriaId], references: [id])
  AnunciosBotao AnunciosBotao[]
  Destaques     Destaques[]
}

model Planos {
  id             Int        @id @default(autoincrement())
  nome           String
  descricao      String     @db.VarChar(10)
  caminho        String     @db.VarChar(255)
  periodicidade  String     @db.VarChar(50)
  limiteAnuncios Int
  categoriaId    Int
  status         String     @db.VarChar(10)
  createdAt      DateTime   @default(now())
  Categoria      Categorias @relation(fields: [categoriaId], references: [id])
}

model Destaques {
  id             Int           @id @default(autoincrement())
  categoriaId    Int
  subCategoriaId Int
  valor          Decimal?      @db.Decimal(10, 2)
  posicao        String        @db.VarChar(50)
  periodo        String        @db.VarChar(20)
  forma          String        @db.VarChar(50)
  status         String        @db.VarChar(10)
  createdAt      DateTime      @default(now())
  categoria      Categorias    @relation(fields: [categoriaId], references: [id])
  subCategory    SubCategorias @relation(fields: [subCategoriaId], references: [id])
}

model Cliente {
  id                Int                @id @default(autoincrement())
  vemdedorId        Int
  tipoCliente       String
  razaoSocial       String
  nomeFantasia      String
  cnpj              String             @db.VarChar(14)
  inscrisaoEstadual String             @db.VarChar(20)
  incricaoMunicial  String             @db.VarChar(20)
  cep               String             @db.VarChar(8)
  endereco          String
  cidadee           String             @db.VarChar(100)
  estado            String             @db.VarChar(2)
  status            String             @db.VarChar(10)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  vendedor          User               @relation(fields: [vemdedorId], references: [id])
  AnunciosInclusao  AnunciosInclusao[]
  telefones         Telefone[]
}

model Anuncios {
  id          Int      @id @default(autoincrement())
  tipoAnuncio String
  valor       Decimal? @db.Decimal(10, 2)
  posicao     String   @db.VarChar(50)
  status      String   @db.VarChar(10)
  createdAt   DateTime @default(now())
}

model FAQ {
  id        Int      @id @default(autoincrement())
  pergunta  String   @db.VarChar(255)
  resposta  String   @db.VarChar(255)
  posicao   String   @db.VarChar(50)
  status    String   @db.VarChar(10)
  createdAt DateTime @default(now())
}

model AnunciosBotao {
  id             Int           @id @default(autoincrement())
  nome           String
  categoriaId    Int
  subCategoriaId Int
  status         String        @db.VarChar(10)
  createdAt      DateTime      @default(now())
  categoria      Categorias    @relation(fields: [categoriaId], references: [id])
  subCategory    SubCategorias @relation(fields: [subCategoriaId], references: [id])
}

model Cupons {
  id          Int      @id @default(autoincrement())
  nome        String
  descricao   String   @db.VarChar(255)
  periodo     String   @db.VarChar(20)
  tipo        String   @db.VarChar(50)
  acumulativo Boolean
  multiplo    Boolean
  status      String   @db.VarChar(10)
  createdAt   DateTime @default(now())
}

model AnunciosInclusao {
  id        Int      @id @default(autoincrement())
  clienteId Int
  type      String
  posicao   String   @db.VarChar(50)
  periodo   String   @db.VarChar(20)
  forma     String   @db.VarChar(50)
  pecaPath  String
  pagamento String   @db.VarChar(20)
  status    String   @db.VarChar(10)
  createdAt DateTime @default(now())
  Cliente   Cliente  @relation(fields: [clienteId], references: [id])
}
